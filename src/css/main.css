:root{
    --lightColor: #EEEEEE;
    --darkColor: #111111;
    --highlightColor: purple;

    --darkBorder: 2px solid black;
    --thinDarkBorder: 1px solid black;
    --lightBorder: 2px solid white;
}

*{
    box-sizing: border-box;
}

body{
    margin: 0;
    padding: 0;
}


.App{   
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.form{
    display: flex;
}

.form > div{
    margin: 0 1rem 0 1rem;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}

.form > div > *{
    margin: 0.5rem
}

#storageSizeInput, #transferSizeInput{
    position: relative;
}

#storageSizeInput::before, #transferSizeInput::before{
    content: "0";
    position: absolute;
    bottom: 0;
    transform: translateY(100%);
}

#storageSizeInput::after, #transferSizeInput::after{
    content: "1000";
    position: absolute;
    bottom: 0;
    right: 0;
    transform: translateY(100%);
}

/*---Chart---*/

.pricingChart{
    width: 60vw;
    min-width: max-content;
    min-height: 320px;
    margin-top: 3rem;
    display: flex;
    justify-content: center;
}

#chartServices, #chartColumns{ 
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

#chartServices, #chartColumns{
    padding: 1rem 0 1rem 0;
}

.serviceItem{
    height: 100%;
    border-bottom: var(--darkBorder);
    overflow: auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.serviceItem fieldset{
    margin: 0;
    padding: 0;
    font-size: 0.6rem;
    border: none;
    display: flex;
    flex-wrap: wrap;
}

.serviceIcon{
    width: 1rem;
    height: 1rem;
}

.serviceName{
    word-wrap: break-word;
}

#chartColumns{
    width: 60%;
    min-width: 320px;
    min-width: 3;
    border-left: 0.5rem solid black;
}

.chartItem{
    height: 100%;
    align-items: center;
    display: flex;
}

.chartColumn{
    height: 1.2rem;
    background-color: gray;
    border: var(--thinDarkBorder);

    animation-name: columnWidthResize;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.chartColumn.minPrice{
    background-color: var(--highlightColor);
}







@media screen and (max-width: 640px) {
    .App{
        align-items: center;
        flex-direction: column-reverse;
    }

    .pricingChart{
        min-height: 480px;
        align-items: center;
        flex-direction: column-reverse;
    }

    #chartServices,  #chartColumns{
        min-width: 320px;
        padding: 0 1rem 0 1rem;
        justify-content: space-between;
        flex-direction: row;
    }

    .serviceItem{
        width: 100%;
        height: auto;
        margin: 0;
        font-size: 0.8rem;
        text-align: center;
        flex-direction: column-reverse;
        justify-content: flex-end;
        align-items: center;
    }

    .serviceItem fieldset{
        justify-content: center;
    }

    #chartColumns{
        height: 60vh;
        border-left: none;
        border-bottom: 1rem solid black;
        align-items: flex-end;
    }

    .chartItem{
        width: 100%;
        height: 100%;
        align-items: center;
        flex-direction: column-reverse;
    }

    .chartColumn{
        width: 1rem !important; /*Overrite animation's value*/
        height: calc(100% * 0.8 * var(--size));
        animation-name: columnHeightResize;
    }
}




@keyframes columnWidthResize{
    0%{
        width: 0%;
    }

    100%{
        width: calc(100% * 0.8 * var(--size)); /*chart take only 8/10 of the width of container, the rest of space is for the price*/
    }
}

@keyframes columnHeightResize{
    0%{
        height: 0%;
    }

    100%{
        height: calc(100% * 0.8 * var(--size)); /*chart take only 8/10 of the width of container, the rest of space is for the price*/
    }
}








